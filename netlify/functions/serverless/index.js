const { EleventyServerless } = require("@11ty/eleventy");
const cookie = require("cookie");

// Explicit dependencies for the bundler from config file and global data.
// The file is generated by the Eleventy Serverless Bundler Plugin.
require("./eleventy-bundler-modules.js");

const API_BASE_URL = process.env.API_BASE_URL;
const AUTH_COOKIE_NAME = "auth-accessToken";

async function handler(event) {
  const { default: fetch } = await import("node-fetch");

  let token;
  if (event.headers && event.headers.cookie) {
    const cookies = cookie.parse(event.headers.cookie);
    if (cookies[AUTH_COOKIE_NAME]) {
      token = cookies[AUTH_COOKIE_NAME];
    }
  }

  let newStatus = {
    content: "working on the status message API.",
    contentAndEmoji: "working on the status message API. ðŸ”§",
    relativeTime: "Now",
    emoji: "ðŸ”§",
  };

  const { content, emoji } = event.queryStringParameters;

  try {
    const apiResponse = await fetch(`${API_BASE_URL}statuses`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${token}`,
      },
      body: JSON.stringify({ content, emoji }),
    });

    if (apiResponse.status === 200) {
      newStatus = await apiResponse.json();
      // trigger netlify build
      await fetch(
        "https://api.netlify.com/build_hooks/665846ccc001c3d9eee43a92",
        {
          method: "POST",
          body: {},
        }
      );
    }

    let elev = new EleventyServerless("serverless", {
      path: new URL(event.rawUrl).pathname,
      query:
        event.multiValueQueryStringParameters || event.queryStringParameters,
      functionsDir: "./netlify/functions/",
      config: function (eleventyConfig) {
        eleventyConfig.addGlobalData("newStatus", newStatus);
      },
    });
    let [page] = await elev.getOutput();

    // If you want some of the data cascade available in `page.data`, use `eleventyConfig.dataFilterSelectors`.
    // Read more: https://www.11ty.dev/docs/config/#data-filter-selectors

    return {
      statusCode: 200,
      headers: {
        "Content-Type": "text/html; charset=UTF-8",
      },
      body: page.content,
    };
  } catch (error) {
    // Only console log for matching serverless paths
    // (otherwise youâ€™ll see a bunch of BrowserSync 404s for non-dynamic URLs during --serve)
    if (elev.isServerlessUrl(event.path)) {
      console.log("Serverless Error:", error);
    }

    return {
      statusCode: error.httpStatusCode || 500,
      body: JSON.stringify(
        {
          error: error.message,
        },
        null,
        2
      ),
    };
  }
}

// Choose one:
// * Runs on each request: AWS Lambda, Netlify Function
// * Runs on first request only: Netlify On-demand Builder
//    1. Donâ€™t forget to `npm install @netlify/functions`
//    2. Also use `redirects: "netlify-toml-builders"` in your config fileâ€™s serverless bundler options:
//       https://www.11ty.dev/docs/plugins/serverless/#bundler-options

exports.handler = handler;

// const { builder } = require("@netlify/functions");
// exports.handler = builder(handler);
